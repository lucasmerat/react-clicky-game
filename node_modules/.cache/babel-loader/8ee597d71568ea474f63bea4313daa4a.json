{"ast":null,"code":"var _jsxFileName = \"/Users/lucasmerat/Desktop/bootCamp/week-17/homeWork/react-clicky-game/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport chars from \"../data/chars.json\";\nimport Header from \"./Header\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chars,\n      score: 0,\n      topScore: 0\n    };\n\n    this.shuffle = () => {\n      if (chars) {\n        const shuffledChars = chars.slice();\n\n        for (let i = shuffledChars.length - 1; i > 0; i--) {\n          const rand = Math.floor(Math.random() * (i + 1));\n          var _ref = [shuffledChars[rand], shuffledChars[i]];\n          shuffledChars[i] = _ref[0];\n          shuffledChars[rand] = _ref[1];\n        }\n\n        return shuffledChars;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.shuffle();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, shuffledChars && shuffledChars.map(char => {\n      return React.createElement(\"div\", {\n        className: \"col s3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: char.image,\n        alt: char.name,\n        className: \"responsive-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/lucasmerat/Desktop/bootCamp/week-17/homeWork/react-clicky-game/src/components/Main.js"],"names":["React","Component","chars","Header","Main","state","score","topScore","shuffle","shuffledChars","slice","i","length","rand","Math","floor","random","componentDidMount","render","map","char","image","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACpB;AACLH,MAAAA,KADK;AAELI,MAAAA,KAAK,EAAE,CAFF;AAGLC,MAAAA,QAAQ,EAAE;AAHL,KADoB;;AAAA,SAS3BC,OAT2B,GASjB,MAAM;AACd,UAAGN,KAAH,EAAS;AACP,cAAMO,aAAa,GAAGP,KAAK,CAACQ,KAAN,EAAtB;;AACF,aAAK,IAAIC,CAAC,GAAGF,aAAa,CAACG,MAAd,GAAuB,CAApC,EAAuCD,CAAC,GAAG,CAA3C,EAA8CA,CAAC,EAA/C,EAAmD;AAC/C,gBAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAb;AAD+C,qBAEL,CAACF,aAAa,CAACI,IAAD,CAAd,EAAsBJ,aAAa,CAACE,CAAD,CAAnC,CAFK;AAE9CF,UAAAA,aAAa,CAACE,CAAD,CAFiC;AAE5BF,UAAAA,aAAa,CAACI,IAAD,CAFe;AAGlD;;AACD,eAAOJ,aAAP;AACC;AACF,KAlB0B;AAAA;;AAM3BQ,EAAAA,iBAAiB,GAAE;AACjB,SAAKT,OAAL;AACD;;AAWDU,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCT,aAAa,IAAKA,aAAa,CAACU,GAAd,CAAkBC,IAAI,IAAE;AACzC,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAf;AAAsB,QAAA,GAAG,EAAED,IAAI,CAACE,IAAhC;AAAsC,QAAA,SAAS,EAAC,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KANkB,CADnB,CADF,CAHA,CADF;AAiBD;;AArC0B;;AAwC7B,eAAelB,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport chars from \"../data/chars.json\"\nimport Header from \"./Header\"\n\nclass Main extends Component {\n  state ={\n    chars, \n    score: 0,\n    topScore: 0\n  }\n  componentDidMount(){\n    this.shuffle();\n  }\n  shuffle = () => {\n    if(chars){\n      const shuffledChars = chars.slice()\n    for (let i = shuffledChars.length - 1; i > 0; i--) {\n        const rand = Math.floor(Math.random() * (i + 1));\n        [shuffledChars[i], shuffledChars[rand]] = [shuffledChars[rand], shuffledChars[i]];\n    }\n    return shuffledChars\n    }\n  }\n  render(){\n    return (\n      <div>\n      <Header />\n\n      <div className=\"container\">\n        <div className=\"row\">\n        {shuffledChars &&  shuffledChars.map(char=>{\n          return(\n            <div className=\"col s3\">\n              <img src={char.image} alt={char.name} className=\"responsive-img\"/>\n            </div>\n          )\n        })}\n        </div> \n      </div>\n      </div>\n    )\n  }\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}